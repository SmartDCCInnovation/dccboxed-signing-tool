name: Tests

on:
  push:
    branches:
      - main
      - dccboxed-*
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - dccboxed-*

jobs:
  format:
    name: Check Formatting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - name: Set up JDK 21
      uses: actions/setup-java@v5
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Maven install plugins
      run: mvn -B -V dependency:resolve-plugins
    - name: Check format
      run: mvn -B -V formatter:validate

  lint:
    name: Check Static Errors
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - name: Set up JDK 21
      uses: actions/setup-java@v5
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Install reviewdog
      uses: reviewdog/action-setup@v1
      with:
        reviewdog_version: latest
    - name: Select reviewdog reporter
      id: get-reporter
      run: |
        if test "${{ github.event_name }}" = "pull_request"; then
          echo "::set-output name=reporter::github-pr-review"
        else
          echo "::set-output name=reporter::github-check"
        fi
    - name: Maven install plugins
      run: mvn -B -V dependency:resolve-plugins
    - name: Run checkstyle
      run: mvn -B checkstyle:checkstyle
    - name: Run reviewdog
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: reviewdog -f=checkstyle -reporter=${{ steps.get-reporter.outputs.reporter }} -fail-on-error < target/checkstyle-result.xml
    - name: Run checkstyle (catch all)
      if: github.event_name == 'pull_request'
      run: mvn -B checkstyle:check

  test:
    name: Run Tests on Java ${{ matrix.jdk }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        jdk: [ 11, 17, 21, 23 ]
    steps:
    - uses: actions/checkout@v5
    - name: Set up JDK ${{ matrix.jdk }}
      uses: actions/setup-java@v5
      with:
        java-version: ${{ matrix.jdk }}
        distribution: 'temurin'
        cache: maven
    - name: Maven install dependencies
      run: mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
    - name: Run tests and collect coverage
      run: mvn -B test
    - name: Upload coverage to Codecov (only java 11)
      if: matrix.jdk == '11' && (github.event_name != 'push' || github.ref_type != 'tag' || !startsWith(github.ref_name, 'v'))
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  release:
    name: Upload Release Package
    if: github.event_name == 'push' && github.ref_type == 'tag' && startsWith(github.ref_name, 'v')
    needs:
    - format
    - lint
    - test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - name: Set up JDK 11
      uses: actions/setup-java@v5
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Maven install dependencies
      run: mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
    - name: Build package
      run: mvn -B package
    - name: Extract and check package version
      id: get-package
      run: |
        version=$(echo ${{github.ref_name}} | cut -c2-)
        package="target/xmldsig-${version}.jar"
        if test -f "${package}"; then
          echo "::set-output name=package::$package"
        else
          echo "Error: expected package file at: ${package}" 1>&2
          exit 1
        fi
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ steps.get-package.outputs.package }}
        tag: ${{ github.ref }}
        overwrite: true
        body: "Release ${{ github.ref_name }}"
